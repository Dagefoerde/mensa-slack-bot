test:
  image: python:2.7
  script:
    - pip install -r requirements.txt
    - pip install -r test-requirements.txt
    - py.test --cov-config .coveragerc --cov=. tests


before_script:
  # Install ssh-agent if not already installed, it is required by Docker.
  # (change apt-get to yum if you use a CentOS-based image)
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'

  # Run ssh-agent (inside the build environment)
  - eval $(ssh-agent -s)

  # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  - ssh-add <(echo "$SSH_PRIVATE_KEY")

  # For Docker builds disable host key checking. Be aware that by adding that
  # you are suspectible to man-in-the-middle attacks.
  # WARNING: Use this only with the Docker executor, if you use it with shell
  # you will overwrite your user's SSH config.
  - mkdir -p ~/.ssh
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  # In order to properly check the server's host key, assuming you created the
  # SSH_SERVER_HOSTKEYS variable previously, uncomment the following two lines
  # instead.
  # - mkdir -p ~/.ssh
  # - '[[ -f /.dockerenv ]] && echo "$SSH_SERVER_HOSTKEYS" > ~/.ssh/known_hosts'

deploy:
  environment:
    name: Raspberry
    url: https://$CI_ENVIRONMENT_URL
  script:
  - ssh pi@RASPERRY-PI-ZERO-W.uni-muenster.de mkdir -p deployment/slackMensaBot/
  - scp -r ./* pi@$CI_ENVIRONMENT_URL:deployment/slackMensaBot/
  - ssh pi@RASPERRY-PI-ZERO-W.uni-muenster.de cd deployment/slackMensaBot/ && python slackMensaBot.py &
  only:
  - master